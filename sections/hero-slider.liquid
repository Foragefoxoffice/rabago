<section class="hero-slider" 
  style="--hero-height: {{ section.settings.hero_height }}px; 
         {% if section.settings.section_bg_gradient != blank %}
           background: {{ section.settings.section_bg_gradient }};
         {% elsif section.settings.section_bg_color != blank %}
           background-color: {{ section.settings.section_bg_color }};
         {% endif %}
         {% if section.settings.section_bg_image != blank %}
           background-image: url({{ section.settings.section_bg_image | image_url: width: 2000 }});
           background-size: cover;
           background-position: center;
           background-blend-mode: overlay;
         {% endif %}">
  <div class="swiper hero-swiper"
       data-swiper='{
         "loop": {{ section.settings.loop | json }},
         "autoplay": { "delay": {{ section.settings.autoplay_delay }} , "disableOnInteraction": false },
         "slidesPerView": 1,
         "pagination": true,
         "navigation": {{ section.settings.show_arrows | json }}
       }'>
    <div class="swiper-wrapper">
      {% for block in section.blocks %}
        <div class="swiper-slide" style="background-image:url({{ block.settings.bg_image | image_url: width: 2000 }});">
          <div class="hero-content text-{{ block.settings.text_align }}">
            {% if block.settings.subheading != blank %}
              <p class="hero-subheading" style="color: {{ block.settings.text_color }};">
                {{ block.settings.subheading }}
              </p>
            {% endif %}
            {% if block.settings.heading != blank %}
              <h2 class="hero-heading" style="color: {{ block.settings.text_color }};">
                {{ block.settings.heading }}
              </h2>
            {% endif %}
            {% if block.settings.button_label != blank %}
              <a href="{{ block.settings.button_link }}"
                 class="hero-btn"
                 style="background: {{ block.settings.button_bg }}; color: {{ block.settings.button_color }};">
                {{ block.settings.button_label }}
              </a>
            {% endif %}
          </div>
        </div>
      {% endfor %}
    </div>

    <!-- Custom Pagination -->
    <div class="swiper-pagination custom-pagination"></div>

    {% if section.settings.show_arrows %}
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
    {% endif %}
  </div>
</section>


<style>
.hero-slider {
  position: relative;
  width: 100%;
  overflow: hidden;
  height: var(--hero-height, 600px);
  padding: 60px 100px;

}
.hero-swiper {
  width: 100%;
  height: 100%;
}
.hero-swiper .swiper-slide {
  background-size: cover;
  background-position: center;
  display: flex;
  align-items: center;
  justify-content: center;
    border-radius: 16px;
  padding: 20px;
}
.hero-content {
  max-width: 700px;
}
.hero-content.text-left { text-align: left; }
.hero-content.text-center { text-align: center; margin: 0 auto; }
.hero-content.text-right { text-align: right; margin-left: auto; }

.hero-heading {
  font-size: 54px;
  font-weight: 800;
  margin: 10px 0;
}
.hero-subheading {
  font-size: 22px;
  font-weight: 400;
  margin-bottom: 15px;
}
.hero-btn {
  display: inline-block;
  margin-top: 20px;
  padding: 14px 32px;
  border-radius: 40px;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s ease;
}
.hero-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(0,0,0,0.25);
}

/* Numbered Pagination with Progress Ring */
.custom-pagination {
  position: absolute;
  bottom: 60px !important;
  right: 20px;
  display: flex;
  justify-content: end;
  align-items: center;
  gap: 12px;
  width: 90% !important;
}
.custom-pagination .swiper-pagination-bullet {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  color: #fff;
  font-size: 14px;
  line-height: 32px;
  text-align: center;
  font-weight: bold;
  position: relative;
  opacity: 0.6;
  background: transparent;
}
.custom-pagination .swiper-pagination-bullet-active {
  opacity: 1;
}
.custom-pagination .progress-ring {
    position: absolute;
    top: -1px;
    left: -1px;
    width: 36px;
    height: 36px;
    transform: rotate(-90deg);
    pointer-events: none;
    border-radius: 50%;
    border: 1px solid #fff;
}
.custom-pagination svg circle {
  stroke: #fff;
  stroke-width: 2;
  fill: none;
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  transition: stroke-dashoffset linear;
}

/* Arrows */
.swiper-button-next,
.swiper-button-prev {
  width: 44px;
  height: 44px;
  background: #fff;
  border-radius: 50%;
  color: #000;
}
.swiper-button-next::after,
.swiper-button-prev::after {
  font-size: 16px;
  font-weight: bold;
}
</style>

<script>
document.addEventListener("DOMContentLoaded", function () {
  document.querySelectorAll(".hero-swiper").forEach(function (el) {
    let options = {};
    try {
      options = JSON.parse(el.getAttribute("data-swiper"));
    } catch (e) {
      console.warn("Invalid Swiper options for:", el);
    }

    if (options.pagination) {
      options.pagination = {
        el: el.querySelector(".swiper-pagination"),
        clickable: true,
        renderBullet: function (index, className) {
          return `
            <div class="${className}">
              ${index + 1}
              <svg class="progress-ring" viewBox="0 0 36 36">
                <circle cx="18" cy="18" r="16"></circle>
              </svg>
            </div>
          `;
        }
      };
    }
    if (options.navigation) {
      options.navigation = {
        nextEl: el.querySelector(".swiper-button-next"),
        prevEl: el.querySelector(".swiper-button-prev"),
      };
    }

    const swiper = new Swiper(el, options);

    // Progress animation
    let delay = options.autoplay?.delay || 5000;

    function startProgress(index) {
      const bullets = el.querySelectorAll(".swiper-pagination-bullet circle");
      bullets.forEach(c => {
        c.style.transition = "none";
        c.style.strokeDashoffset = 100;
      });

      const active = bullets[index];
      if (active) {
        active.style.transition = `stroke-dashoffset ${delay}ms linear`;
        active.style.strokeDashoffset = 0;
      }
    }

    swiper.on("slideChange", () => {
      startProgress(swiper.realIndex);
    });

    swiper.on("autoplay", () => {
      startProgress(swiper.realIndex);
    });

    startProgress(0);
  });
});
</script>

{% schema %}
{
  "name": "Hero Slider",
  "settings": [
    {
  "type": "color_background",
  "id": "section_bg_gradient",
  "label": "Section Gradient Background"
},
{
  "type": "color",
  "id": "section_bg_color",
  "label": "Fallback Background Color",
  "default": "#000000"
},
{
  "type": "image_picker",
  "id": "section_bg_image",
  "label": "Section Background Image"
},

    {
      "type": "range",
      "id": "hero_height",
      "label": "Slider Height (px)",
      "min": 400,
      "max": 1000,
      "step": 50,
      "default": 600
    },
    {
      "type": "checkbox",
      "id": "loop",
      "label": "Enable Looping",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_delay",
      "label": "Autoplay Delay (ms)",
      "min": 1000,
      "max": 9000,
      "step": 500,
      "default": 5000
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "Show Navigation Arrows",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        { "type": "image_picker", "id": "bg_image", "label": "Background Image" },
        { "type": "text", "id": "subheading", "label": "Subheading" },
        { "type": "text", "id": "heading", "label": "Heading" },
        { "type": "text", "id": "button_label", "label": "Button Text" },
        { "type": "url", "id": "button_link", "label": "Button Link" },
        {
          "type": "select",
          "id": "text_align",
          "label": "Text Alignment",
          "options": [
            { "value": "left", "label": "Left" },
            { "value": "center", "label": "Center" },
            { "value": "right", "label": "Right" }
          ],
          "default": "center"
        },
        { "type": "color", "id": "text_color", "label": "Text Color", "default": "#ffffff" },
        { "type": "color", "id": "button_bg", "label": "Button Background", "default": "#ffffff" },
        { "type": "color", "id": "button_color", "label": "Button Text Color", "default": "#000000" }
      ]
    }
  ],
  "presets": [{ "name": "Hero Slider" }]
}
{% endschema %}
